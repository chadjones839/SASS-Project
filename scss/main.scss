
/*

-------- MAIN ---------
- Partial files begin with an underscore and are not mapped into css files by the Live SASS Compiler extension
- (1) Partial files are imported in this format. Does not include the underscore or .scss
- (2) Using the @include directive, mixins can be applied at the root level or within selectors
- (3) The fancy-links mixin accepts an argument that doesnt have a default assigned.
- (4) The 'box' mixin contains two parameters that both contain defaults. From here, I can: 
      - Add no parameters
      - Add two parameters
      - Add the first parameter ($radius)
     *- Add the second parameter ($border) by definining the parameter, followed by property values
      - Add the parameters in reverse order, as long as the parameters are defined
- (5) Hyphenated properties (font-family + font-weight) can be embedded on their similar first keyword as displayed here.
- (6) The box-shadow mixin contains a variable argument, and I can pass in as many parameters as I would like
- (7) the apply-to-ie-6 mixin contains a @content directive to the the html tag. any stlyes included within this @include directive will apply only to the IE 6 browser

*/



// (1)
@import 'partials/functions';
@import 'partials/variables';
@import 'partials/mixins';

@include google-font("Alegreya+Sans");
@include google-font("Titillium+Web");

// (2) (3)
@include fancy-links(italic);

// (7)
@include apply-to-ie-6 {
  body {
    font-size: 125%;
  }
}

// INHERITANCE
.error {
  color: red;
}

.critical-error {
  @extend .error;
  bottom: 1px solid red;
  font-weight: bold;
}

// (5)
body {
  font: {
    family: $text-font;
    size: em(18px);
  }
  background-color: $body-background-color;
  color: $text-color;

  @include large-screens {
    font-size: 125%;
  }
}

h1, h2, h3, h4 {
  font-family: $headline-font;
}

// (2)
h2 {
  @include large-text;
}

p {
  font-family: $text-font;
}

a {
  color: $link-color;

  @include blue-beans {
    color: #8779ff;
  }

  &:hover {
    color: darken($link-color, 15%)
  }
}

// Extend only selectors start with a %. CSS is not generated by SASS compiler
%highlight {
  font-style: italic;
}

.sub-title {
  @extend %highlight;
  // use !optional after extended selector to ignore it if it doesn't exist
  @extend .foo !optional;
  font-size: em(20px)
}

.warning-button {
  @include warning;
  padding: 8px 12px;
}

.cta-button {
  @extend .warning-button;
  // also works: 
  // @extend a:hover
  // @extend .headline.large

  // cannot sequence like this:
  // @extend .headline .large
  @extend .error;
  @include rounded(8px);
  font-weight: bold;
}

// extend statements can be chained
// NOTE: The extend directive is not globally scoped when using MEDIA QUERIES. Selectors can only be extended if they are already defined inside the media query.
.super-cta-button {
  @extend .cta-button;
  font-size: em(20px);
}

// (4)
#header {
  @include box ($border: 2px solid #333);
  // (5)
  @include box-shadow(2px 0px 4px #999, 1px 1px 6px $secondary-color);
  height: $header-height;
  background-color: $theme-color;

  #main-menu {
    li {
      display: inline;
    }

    a {
      color: $menu-item-color;
      padding: 6px 8px;
      border-bottom: 1px solid transparentize(#fefefe, 1);
      transition: border-bottom .5s;
      transition-timing-function: ease-in-out;

      &:hover {
        border-bottom: 1px solid opacify(#fefefe, .5);
      }
    }
  }

  #logo {

  }
}

#main {
  width: $content-width;
  @include large-screens {
    width: auto;
    max-width: $content-width;
  }
  margin-left: auto;
  margin-right: auto;

  #content {
    float: left;
    width: 6*$col;
  }

  #sidebar {
    float: right;
    width: 2*$col;

    li {
      list-style-type: none;
      padding: em(16px) em(20px);
      border-bottom: 1px dashed #999;

      &:hover {
        background-color: $list-item-background-color;
      }
    }
  }
}

#footer {
  clear: both;
  height: $footer-height;
  background-color: $ternary-color;

  @include rogers-rovers {
    border-top: 5px solid darken($ternary-color, 15%);
  }
}
